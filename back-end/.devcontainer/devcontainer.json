{
  "name": "Docker-Python",
  "dockerComposeFile": [
    "../compose.dev.yml",
    "compose.extend.yml"
  ],
  "service": "api",
  "workspaceFolder": "/src",
  "customizations": {
    "vscode": {
      "extensions": [
        "ms-python.python",
        "ms-python.flake8",
        "ms-python.black-formatter",
        "ms-python.mypy-type-checker",
        "ms-python.isort",
        "njpwerner.autodocstring"
      ],
      "settings": {
        "files.autoSave": "afterDelay",
        "editor.tabSize": 2,
        // .venv 内の python を使用
        "python.defaultInterpreterPath": "${workspaceFolder}/.venv/bin/python",
        "[python]": {
          "editor.tabSize": 4,
          "editor.defaultFormatter": "ms-python.black-formatter",
          "editor.formatOnType": true,
          "editor.formatOnSave": true,
          "editor.formatOnPaste": true,
          "editor.codeActionsOnSave": {
            "source.organizeImports": true
          }
        },
        "black-formatter.args": [
          "--line-length=79"
        ],
        "flake8.args": [
          "--max-line-length=79",
          "--ignore=E203, W503",
          // E203: ":"の前の空白を入れないルール
          // W503: 演算子の前に改行しないようにするルール
          "--max-complexity=10",
          "--exclude=.venv,.git,__pycache__"
        ],
        "mypy-type-checker.args": [
          // エラー時のメッセージを詳細表示
          "--show-error-context",
          // エラー発生箇所の行数/列数を表示
          "--show-column-numbers",
          // import 先のチェックを行わない (デフォルトだとサードパーティーライブラリまでチェックする)
          "--ignore-missing-imports",
          // 関数定義の引数/戻り値に型アノテーション必須
          "--disallow-untyped-defs",
          // 戻り値が Any 型ではない関数の戻り値の型アノテーションが Any のとき警告
          "--warn-return-any",
          // mypy エラーに該当しない箇所に `# type: ignore` コメントが付与されていたら警告
          // ※ `# type: ignore` が付与されている箇所は mypy のエラーを無視出来る
          "--warn-unused-ignores",
          // 冗長なキャストに警告
          "--warn-redundant-casts"
        ],
        "isort.args": [
          "--profile", "black",
          "--line-length", "79",
          // from third_party import lib1, lib2...のような記述時の改行方法の設定(https://pycqa.github.io/isort/docs/configuration/multi_line_output_modes.html)
          "--multi-line", "3",
          // 最後の要素の末尾に","を付けるようにする設定
          "--trailing-comma", "true"
        ],
        "autoDocstring.docstringFormat": "numpy",
        "isort.check": true
      }
    }
  },
  "shutdownAction": "stopCompose"
}
